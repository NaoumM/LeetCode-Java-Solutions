/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode firstSwapped = null;
    public TreeNode secondSwapped = null;
    public TreeNode prev = new TreeNode(Integer.MIN_VALUE);
    
    public void recoverTree(TreeNode root) {
        
        inorderTraversal(root);
        if (root == null)
            return;
        
        int temp = firstSwapped.val;
        firstSwapped.val = secondSwapped.val;
        secondSwapped.val = temp;
    }
    
    public void inorderTraversal(TreeNode root) {
        if (root == null)
            return;
        inorderTraversal(root.left);
        if (firstSwapped == null && prev.val > root.val) {
            firstSwapped = prev;
        }
        if (firstSwapped != null && prev.val > root.val) {
            secondSwapped = root;
        }
        prev = root;
        inorderTraversal(root.right);
    }
}
