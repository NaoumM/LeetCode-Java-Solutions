/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode rotateRight(ListNode head, int n) {
        int nList = 0;
        ListNode cur = head;
        ListNode tail = null;
        while (cur != null) {
            nList ++;
            if (cur.next == null) {
                tail = cur;
            }
            cur = cur.next;
        }
        
        if (nList == 0 || nList == 1) {
            return head;
        }
        
        int k = n % nList;
        if (k == 0) {
            return head;
        }
        ListNode start = null;
        cur = head;
        for (int i = 1; i <= k; i ++) {
            cur = cur.next;
        }
        start = head;
        
        while (cur.next != null) {
            cur = cur.next;
            start = start.next;
        }

        tail.next = head;
        head = start.next;
        start.next = null;
        return head;
        
        
    }
}