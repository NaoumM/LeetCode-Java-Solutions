public class Solution {
    public int trap(int[] A) {
        int maxLeft = 0;
        int[] waterOnePass = new int[A.length];
        for (int i = 0; i < A.length; i ++) {
            waterOnePass[i] = Math.max(maxLeft - A[i], 0);
            if ( A[i] > maxLeft )
                maxLeft = A[i];
        }
        int maxRight = 0;
        int[] waterTwoPass = new int[A.length];
        for (int i = A.length - 1; i >= 0; i --) {
            waterTwoPass[i] = Math.max(maxRight - A[i], 0);
            if ( A[i] > maxRight)
                maxRight = A[i];
        }
        
        int result = 0;
        for (int i = 0; i < A.length; i ++) {
            result = result + Math.min(waterOnePass[i], waterTwoPass[i]);
        }
        return result;   
    }
}