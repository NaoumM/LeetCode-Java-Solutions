public class Solution {
    public boolean isInterleave(String s1, String s2, String s3) {
        if (s1 == null || s1.length() == 0 ) return s3.equals(s2);
        if (s2 == null || s2.length() == 0 ) return s3.equals(s1);
        
        int len1 = s1.length();
        int len2 = s2.length();
        int len3 = s3.length();
        if (len3 != len1 + len2)
            return  false;
        // isInterleaver[i][j] denote whether s3[0, ..., i+j) is interleaving of s1[0, ..., i) and s2[0, ..., j)
        
        boolean[][] isInterleave = new boolean[len1+1][len2+1]; 
        isInterleave[0][0] = true;
        for (int i = 1; i <= len1; i ++) {
            isInterleave[i][0] = isInterleave[i-1][0] && s1.charAt(i-1) == s3.charAt(i-1);
        }
        for (int j = 1; j <= len2; j++) {
            isInterleave[0][j] = isInterleave[0][j-1] && s2.charAt(j-1) == s3.charAt(j-1); // you should never make this kind of typo
            // previously, written as isInterleave[0][j] = isInterleave[0][j] && s2.charAt(j-1) == s3.charAt(j-1);
            // wrong answer!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        }
        
        for (int i = 1; i <= len1; i ++) {
            for (int j = 1; j <= len2 ; j++) {
                isInterleave[i][j] = (isInterleave[i-1][j] &&  s1.charAt(i-1) ==  s3.charAt(i+j-1)) ||
                                    (isInterleave[i][j-1] &&  s2.charAt(j-1) ==  s3.charAt(i+j-1));
            }
        }
        
        return isInterleave[len1][len2];
    }
}